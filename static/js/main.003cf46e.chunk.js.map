{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","className","name","href","email","body","CommentList","comments","map","UserInfo","user","PostInfo","post","title","length","PostList","posts","id","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"408IAAaA,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGD,EAAQE,OAGV,OAED,mBACED,UAAU,qBACVE,KAAI,iBAAYH,EAAQI,OAF1B,mBAIMJ,EAAQI,YAIhB,qBAAKH,UAAU,oBAAf,SACGD,EAAQK,WCfFC,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKN,UAAU,cAAf,SACGM,EAASC,KAAI,SAAAR,GAAO,OACnB,cAAC,EAAD,CACEA,QAASA,WCLJS,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mBACET,UAAU,WACVE,KAAI,iBAAYO,EAAKN,OAFvB,SAIGM,EAAKR,SCHGS,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,sBAAKX,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGW,EAAKC,QAGR,8BACG,eAED,cAAC,EAAD,CACEH,KAAME,EAAKF,aAKjB,mBAAGT,UAAU,iBAAb,SACGW,EAAKP,OAINO,EAAKL,SAASO,OAAS,EACrB,cAAC,EAAD,CACEP,SAAUK,EAAKL,WAGjB,mBAAG,UAAQ,oBAAX,kCC5BKQ,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKf,UAAU,WAAf,SACGe,EAAMR,KAAI,SAAAI,GAAI,OACb,cAAC,EAAD,CAEEA,KAAMA,GADDA,EAAKK,UCUX,IAAMD,EAAQE,EAAgBV,KAAI,SAAAI,GAAI,kCACxCA,GADwC,IAE3CF,MAXmBS,EAWDP,EAAKO,OAVhBC,EAAgBC,MAAK,SAAAX,GAAI,OAAIA,EAAKO,KAAOE,MAAW,MAW3DZ,UARsBe,EAQGV,EAAKK,GAPvBM,EAAmBC,QAAO,SAAAxB,GAAO,OAAIA,EAAQsB,SAAWA,MAC5D,QAFL,IAAwBA,EAJHH,KAeRM,EAAM,kBACjB,0BAASxB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAEEe,MAAOA,GADFA,EAAMC,QCtBjBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.003cf46e.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">\n        {comment.name}\n      </strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${comment.email}`}\n      >\n        {`${comment.email}`}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {comment.body}\n    </div>\n  </div>\n);\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo\n        comment={comment}\n      />\n    ))}\n\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <a\n    className=\"UserInfo\"\n    href={`mailto:${user.email}`}\n  >\n    {user.name}\n  </a>\n);\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">\n        {post.title}\n      </h3>\n\n      <p>\n        {' Posted by  '}\n\n        <UserInfo\n          user={post.user}\n        />\n      </p>\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {post.body}\n    </p>\n\n    {\n      post.comments.length > 0 ? (\n        <CommentList\n          comments={post.comments}\n        />\n      ) : (\n        <b data-cy=\"NoCommentsMessage\">\n          No comments yet\n        </b>\n      )\n    }\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo\n        key={post.id}\n        post={post}\n      />\n    ))}\n\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nfunction getCommentById(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId)\n  || null;\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList\n      key={posts.id}\n      posts={posts}\n    />\n  </section>\n);\n","import ReactDOM from 'react-dom';\r\n\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}